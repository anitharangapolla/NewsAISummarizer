{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth';\nexport const signup = async (name, email, password) => {\n  const response = await fetch('/asignup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password\n    })\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.message || 'Failed to sign up');\n  }\n  const data = await response.json();\n  return data.token; // Assuming the backend returns a token\n};\n\n// Login API\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      email,\n      password\n    });\n    return response.data.token;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred during login.';\n  }\n};","map":{"version":3,"names":["axios","API_URL","signup","name","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","token","login","post","error","_error$response","_error$response$data"],"sources":["C:/Users/ranga/OneDrive/Documents/news-summarizer/new-summarizer/src/components/api/api.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/auth';\r\n\r\nexport const signup = async (name, email, password) => {\r\n  const response = await fetch('/asignup', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, email, password }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || 'Failed to sign up');\r\n  }\r\n\r\n  const data = await response.json();\r\n  return data.token; // Assuming the backend returns a token\r\n};\r\n\r\n// Login API\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, { email, password });\r\n    return response.data.token;\r\n  } catch (error) {\r\n    throw error.response?.data?.message || 'An error occurred during login.';\r\n  }\r\n};\r\n\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,EAAE;IACvCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,IAAI;MAAEC,KAAK;MAAEC;IAAS,CAAC;EAChD,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,mBAAmB,CAAC;EAC3D;EAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;EAClC,OAAOG,IAAI,CAACC,KAAK,CAAC,CAAC;AACrB,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOhB,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACqB,IAAI,CAAC,GAAGpB,OAAO,QAAQ,EAAE;MAAEG,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC1E,OAAOC,QAAQ,CAACY,IAAI,CAACC,KAAK;EAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,EAAAD,eAAA,GAAAD,KAAK,CAAChB,QAAQ,cAAAiB,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBL,IAAI,cAAAM,oBAAA,uBAApBA,oBAAA,CAAsBP,OAAO,KAAI,iCAAiC;EAC1E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}