{"ast":null,"code":"// import React, { useState } from \"react\";\n\n// const DashboardPage = () => {\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [newsData, setNewsData] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [showVideoLink, setShowVideoLink] = useState(null); // Track visibility of YouTube link\n\n//   // Categories for quick selection\n//   const categories = [\"Technology\", \"Sports\", \"Politics\", \"Business\", \"Health\", \"Entertainment\"];\n\n//   // Fetch news from API\n//   const fetchNews = async (query) => {\n//     setError(\"\");\n//     setNewsData([]);\n//     setSearchTerm(query);\n\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/news/${query}`, {\n//         method: \"GET\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         mode: \"cors\", // Add this\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP Error: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       setNewsData(data.articles || []);\n//     } catch (err) {\n//       console.error(\"Error fetching news:\", err);\n//       setError(\"Failed to fetch news. Try again.\");\n//     }\n//   };\n\n//   // Handle search manually\n//   const handleSearch = (e) => {\n//     e.preventDefault();\n//     if (searchTerm.trim() === \"\") return;\n//     fetchNews(searchTerm);\n//   };\n\n//   // Toggle the visibility of the YouTube link for each news item\n//   const toggleVideoLink = (index) => {\n//     setShowVideoLink((prevIndex) => (prevIndex === index ? null : index));\n//   };\n\n//   return (\n//     <div style={styles.page}>\n//       <h1 style={styles.headline}>ðŸ“° News Dashboard</h1>\n\n//       {/* Search Bar */}\n//       <form onSubmit={handleSearch} style={styles.searchContainer}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search for news...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//           style={styles.input}\n//         />\n//         <button type=\"submit\" style={styles.button}>Search</button>\n//       </form>\n\n//       {/* Categories */}\n//       <div style={styles.categories}>\n//         <h3 style={styles.sectionTitle}>Categories</h3>\n//         <div style={styles.buttonContainer}>\n//           {categories.map((category) => (\n//             <button key={category} style={styles.categoryBtn} onClick={() => fetchNews(category)}>\n//               {category}\n//             </button>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* News Results */}\n//       <div style={styles.results}>\n//         {error && <p style={styles.error}>{error}</p>}\n//         {newsData.length > 0 && (\n//           <div>\n//             <h3 style={styles.sectionTitle}>News Summaries</h3>\n//             <div style={styles.newsGrid}>\n//               {newsData.map((news, index) => (\n//                 <div key={index} style={styles.newsCard}>\n//                   <img src={news.image} alt=\"News\" style={styles.newsImage} />\n//                   <h4>{news.title}</h4>\n//                   <p>{news.summary}</p>\n//                   <a href={news.url} target=\"_blank\" rel=\"noopener noreferrer\" style={styles.newsLink}>\n//                     Read Full News â†’\n//                   </a>\n//                   <button\n//                     onClick={() => toggleVideoLink(index)}\n//                     style={styles.videoButton}\n//                   >\n//                     {showVideoLink === index ? \"Hide Related Video\" : \"Show Related Video\"}\n//                   </button>\n//                   {showVideoLink === index && (\n//                     <a\n//                       href={`https://www.youtube.com/results?search_query=${encodeURIComponent(news.title)}`}\n//                       target=\"_blank\"\n//                       rel=\"noopener noreferrer\"\n//                       style={styles.youtubeLink}\n//                     >\n//                       ðŸŽ¥ Watch Related Video\n//                     </a>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// // **Styling**\n// const styles = {\n//   page: {\n//     padding: \"20px\",\n//     fontFamily: \"'Arial', sans-serif\",\n//     backgroundColor: \"#111\",\n//     color: \"#fff\",\n//     minHeight: \"100vh\",\n//     textAlign: \"center\",\n//   },\n//   headline: {\n//     fontSize: \"2rem\",\n//     fontWeight: \"bold\",\n//     marginBottom: \"20px\",\n//     textTransform: \"uppercase\",\n//     letterSpacing: \"2px\",\n//   },\n//   searchContainer: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     marginBottom: \"20px\",\n//   },\n//   input: {\n//     padding: \"10px\",\n//     width: \"300px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #888\",\n//     backgroundColor: \"#222\",\n//     color: \"#fff\",\n//     fontSize: \"1rem\",\n//   },\n//   button: {\n//     padding: \"10px 15px\",\n//     marginLeft: \"10px\",\n//     borderRadius: \"5px\",\n//     backgroundColor: \"#fff\",\n//     color: \"#000\",\n//     border: \"1px solid #fff\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//     transition: \"0.3s\",\n//   },\n//   buttonContainer: {\n//     display: \"flex\",\n//     flexWrap: \"wrap\",\n//     justifyContent: \"center\",\n//     gap: \"10px\",\n//     marginBottom: \"20px\",\n//   },\n//   categories: {\n//     marginBottom: \"20px\",\n//   },\n//   categoryBtn: {\n//     padding: \"8px 12px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #fff\",\n//     backgroundColor: \"transparent\",\n//     color: \"#fff\",\n//     cursor: \"pointer\",\n//     transition: \"0.3s\",\n//   },\n//   results: {\n//     marginTop: \"20px\",\n//   },\n//   error: {\n//     color: \"#ff4d4f\",\n//     fontWeight: \"bold\",\n//   },\n//   newsGrid: {\n//     display: \"grid\",\n//     gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n//     gap: \"15px\",\n//     justifyContent: \"center\",\n//   },\n//   newsCard: {\n//     backgroundColor: \"#222\",\n//     padding: \"15px\",\n//     borderRadius: \"5px\",\n//     boxShadow: \"0 2px 4px rgba(255, 255, 255, 0.1)\",\n//     textAlign: \"left\",\n//   },\n//   newsImage: {\n//     width: \"100%\",\n//     height: \"150px\",\n//     objectFit: \"cover\",\n//     borderRadius: \"5px\",\n//     marginBottom: \"10px\",\n//   },\n//   newsLink: {\n//     display: \"block\",\n//     marginTop: \"10px\",\n//     color: \"#fff\",\n//     textDecoration: \"none\",\n//     fontWeight: \"bold\",\n//     borderBottom: \"1px solid #fff\",\n//     width: \"fit-content\",\n//   },\n//   youtubeLink: {\n//     display: \"block\",\n//     marginTop: \"5px\",\n//     color: \"#ff0000\",\n//     textDecoration: \"none\",\n//     fontWeight: \"bold\",\n//   },\n//   videoButton: {\n//     padding: \"8px 12px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #fff\",\n//     backgroundColor: \"transparent\",\n//     color: \"#fff\",\n//     cursor: \"pointer\",\n//     transition: \"0.3s\",\n//     marginTop: \"10px\",\n//   },\n// };\n\n// export default DashboardPage;","map":{"version":3,"names":[],"sources":["C:/Users/ranga/OneDrive/Documents/news-summarizer/new-summarizer/src/components/Dashboard.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// const DashboardPage = () => {\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [newsData, setNewsData] = useState([]);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [showVideoLink, setShowVideoLink] = useState(null); // Track visibility of YouTube link\r\n\r\n//   // Categories for quick selection\r\n//   const categories = [\"Technology\", \"Sports\", \"Politics\", \"Business\", \"Health\", \"Entertainment\"];\r\n\r\n//   // Fetch news from API\r\n//   const fetchNews = async (query) => {\r\n//     setError(\"\");\r\n//     setNewsData([]);\r\n//     setSearchTerm(query);\r\n\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/api/news/${query}`, {\r\n//         method: \"GET\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         mode: \"cors\", // Add this\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP Error: ${response.status}`);\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setNewsData(data.articles || []);\r\n//     } catch (err) {\r\n//       console.error(\"Error fetching news:\", err);\r\n//       setError(\"Failed to fetch news. Try again.\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle search manually\r\n//   const handleSearch = (e) => {\r\n//     e.preventDefault();\r\n//     if (searchTerm.trim() === \"\") return;\r\n//     fetchNews(searchTerm);\r\n//   };\r\n\r\n//   // Toggle the visibility of the YouTube link for each news item\r\n//   const toggleVideoLink = (index) => {\r\n//     setShowVideoLink((prevIndex) => (prevIndex === index ? null : index));\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.page}>\r\n//       <h1 style={styles.headline}>ðŸ“° News Dashboard</h1>\r\n\r\n//       {/* Search Bar */}\r\n//       <form onSubmit={handleSearch} style={styles.searchContainer}>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search for news...\"\r\n//           value={searchTerm}\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//           style={styles.input}\r\n//         />\r\n//         <button type=\"submit\" style={styles.button}>Search</button>\r\n//       </form>\r\n\r\n//       {/* Categories */}\r\n//       <div style={styles.categories}>\r\n//         <h3 style={styles.sectionTitle}>Categories</h3>\r\n//         <div style={styles.buttonContainer}>\r\n//           {categories.map((category) => (\r\n//             <button key={category} style={styles.categoryBtn} onClick={() => fetchNews(category)}>\r\n//               {category}\r\n//             </button>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* News Results */}\r\n//       <div style={styles.results}>\r\n//         {error && <p style={styles.error}>{error}</p>}\r\n//         {newsData.length > 0 && (\r\n//           <div>\r\n//             <h3 style={styles.sectionTitle}>News Summaries</h3>\r\n//             <div style={styles.newsGrid}>\r\n//               {newsData.map((news, index) => (\r\n//                 <div key={index} style={styles.newsCard}>\r\n//                   <img src={news.image} alt=\"News\" style={styles.newsImage} />\r\n//                   <h4>{news.title}</h4>\r\n//                   <p>{news.summary}</p>\r\n//                   <a href={news.url} target=\"_blank\" rel=\"noopener noreferrer\" style={styles.newsLink}>\r\n//                     Read Full News â†’\r\n//                   </a>\r\n//                   <button\r\n//                     onClick={() => toggleVideoLink(index)}\r\n//                     style={styles.videoButton}\r\n//                   >\r\n//                     {showVideoLink === index ? \"Hide Related Video\" : \"Show Related Video\"}\r\n//                   </button>\r\n//                   {showVideoLink === index && (\r\n//                     <a\r\n//                       href={`https://www.youtube.com/results?search_query=${encodeURIComponent(news.title)}`}\r\n//                       target=\"_blank\"\r\n//                       rel=\"noopener noreferrer\"\r\n//                       style={styles.youtubeLink}\r\n//                     >\r\n//                       ðŸŽ¥ Watch Related Video\r\n//                     </a>\r\n//                   )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // **Styling**\r\n// const styles = {\r\n//   page: {\r\n//     padding: \"20px\",\r\n//     fontFamily: \"'Arial', sans-serif\",\r\n//     backgroundColor: \"#111\",\r\n//     color: \"#fff\",\r\n//     minHeight: \"100vh\",\r\n//     textAlign: \"center\",\r\n//   },\r\n//   headline: {\r\n//     fontSize: \"2rem\",\r\n//     fontWeight: \"bold\",\r\n//     marginBottom: \"20px\",\r\n//     textTransform: \"uppercase\",\r\n//     letterSpacing: \"2px\",\r\n//   },\r\n//   searchContainer: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"center\",\r\n//     marginBottom: \"20px\",\r\n//   },\r\n//   input: {\r\n//     padding: \"10px\",\r\n//     width: \"300px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #888\",\r\n//     backgroundColor: \"#222\",\r\n//     color: \"#fff\",\r\n//     fontSize: \"1rem\",\r\n//   },\r\n//   button: {\r\n//     padding: \"10px 15px\",\r\n//     marginLeft: \"10px\",\r\n//     borderRadius: \"5px\",\r\n//     backgroundColor: \"#fff\",\r\n//     color: \"#000\",\r\n//     border: \"1px solid #fff\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//     transition: \"0.3s\",\r\n//   },\r\n//   buttonContainer: {\r\n//     display: \"flex\",\r\n//     flexWrap: \"wrap\",\r\n//     justifyContent: \"center\",\r\n//     gap: \"10px\",\r\n//     marginBottom: \"20px\",\r\n//   },\r\n//   categories: {\r\n//     marginBottom: \"20px\",\r\n//   },\r\n//   categoryBtn: {\r\n//     padding: \"8px 12px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #fff\",\r\n//     backgroundColor: \"transparent\",\r\n//     color: \"#fff\",\r\n//     cursor: \"pointer\",\r\n//     transition: \"0.3s\",\r\n//   },\r\n//   results: {\r\n//     marginTop: \"20px\",\r\n//   },\r\n//   error: {\r\n//     color: \"#ff4d4f\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   newsGrid: {\r\n//     display: \"grid\",\r\n//     gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\r\n//     gap: \"15px\",\r\n//     justifyContent: \"center\",\r\n//   },\r\n//   newsCard: {\r\n//     backgroundColor: \"#222\",\r\n//     padding: \"15px\",\r\n//     borderRadius: \"5px\",\r\n//     boxShadow: \"0 2px 4px rgba(255, 255, 255, 0.1)\",\r\n//     textAlign: \"left\",\r\n//   },\r\n//   newsImage: {\r\n//     width: \"100%\",\r\n//     height: \"150px\",\r\n//     objectFit: \"cover\",\r\n//     borderRadius: \"5px\",\r\n//     marginBottom: \"10px\",\r\n//   },\r\n//   newsLink: {\r\n//     display: \"block\",\r\n//     marginTop: \"10px\",\r\n//     color: \"#fff\",\r\n//     textDecoration: \"none\",\r\n//     fontWeight: \"bold\",\r\n//     borderBottom: \"1px solid #fff\",\r\n//     width: \"fit-content\",\r\n//   },\r\n//   youtubeLink: {\r\n//     display: \"block\",\r\n//     marginTop: \"5px\",\r\n//     color: \"#ff0000\",\r\n//     textDecoration: \"none\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   videoButton: {\r\n//     padding: \"8px 12px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #fff\",\r\n//     backgroundColor: \"transparent\",\r\n//     color: \"#fff\",\r\n//     cursor: \"pointer\",\r\n//     transition: \"0.3s\",\r\n//     marginTop: \"10px\",\r\n//   },\r\n// };\r\n\r\n// export default DashboardPage;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}