{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Login API\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      email,\n      password\n    });\n    return response.data.token;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred during login.';\n  }\n};\n\n// Signup API\n// api/api.js\nexport const signup = async (name, email, password) => {\n  const response = await fetch('http://localhost:5000/api/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Signup failed');\n  }\n  return data.token; // Assuming the token is returned from the API\n};","map":{"version":3,"names":["axios","API_URL","login","email","password","response","post","data","token","error","_error$response","_error$response$data","signup","name","fetch","method","headers","body","JSON","stringify","json","ok","Error","message"],"sources":["C:/Users/ranga/OneDrive/Documents/news-summarizer/new-summarizer/src/components/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Login API\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, { email, password });\r\n    return response.data.token;\r\n  } catch (error) {\r\n    throw error.response?.data?.error || 'An error occurred during login.';\r\n  }\r\n};\r\n\r\n// Signup API\r\n// api/api.js\r\nexport const signup = async (name, email, password) => {\r\n  const response = await fetch('http://localhost:5000/api/signup', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, email, password }),\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Signup failed');\r\n  }\r\n\r\n  return data.token; // Assuming the token is returned from the API\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAE;MAAEE,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC1E,OAAOC,QAAQ,CAACE,IAAI,CAACC,KAAK;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,EAAAD,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,iCAAiC;EACxE;AACF,CAAC;;AAED;AACA;AACA,OAAO,MAAMG,MAAM,GAAG,MAAAA,CAAOC,IAAI,EAAEV,KAAK,EAAEC,QAAQ,KAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMS,KAAK,CAAC,kCAAkC,EAAE;IAC/DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,IAAI;MAAEV,KAAK;MAAEC;IAAS,CAAC;EAChD,CAAC,CAAC;EAEF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACe,IAAI,CAAC,CAAC;EAElC,IAAI,CAACf,QAAQ,CAACgB,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAACf,IAAI,CAACgB,OAAO,IAAI,eAAe,CAAC;EAClD;EAEA,OAAOhB,IAAI,CAACC,KAAK,CAAC,CAAC;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}